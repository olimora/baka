train_set <- arrange(as.data.frame(potencial), diff)[1:tm_velkost,]
forest <- randomForest(praca~gho+oblacnost+teplota+vietor+dlzkadna,
data=train_set, ntree = f.ntree, mtry = f.mtry)
predic <-predict(forest, data.frame(gho = dayd[['gho']], oblacnost = dayd[['oblacnost']],
teplota = dayd[['teplota']], vietor = dayd[['vietor']],
dlzkadna = dayd[['dlzkadna']]), type="response", norm.votes=TRUE)
# varImpPlot(forest)
return(predic)
})
diff <- sapply(1:length(diff), function(x) {
ret <- abs(dayd[['gho']] - potencial[[x,'gho']]) * 100 / scale[['gho']] * pod_gho
ret <- ret + abs(dayd[['oblacnost']] - potencial[[x,'oblacnost']]) * 100 / scale[['oblacnost']] * pod_obl
ret <- ret + abs(dayd[['teplota']] - potencial[[x,'teplota']]) * 100 / scale[['teplota']] * pod_tep
ret <- ret + abs(dayd[['vietor']] - potencial[[x,'vietor']]) * 100 / scale[['vietor']] * pod_vie
ret <- ret + abs(dayd[['dlzkadna']] - potencial[[x,'dlzkadna']]) * 100 / scale[['dlzkadna']] * pod_dlz
return(ret)
})
train_set <- arrange(as.data.frame(potencial), diff)[1:tm_velkost,]
forest <- randomForest(praca~gho+oblacnost+teplota+vietor+dlzkadna,
data=train_set, ntree = f.ntree, mtry = f.mtry)
predic <-predict(forest, data.frame(gho = dayd[['gho']], oblacnost = dayd[['oblacnost']],
teplota = dayd[['teplota']], vietor = dayd[['vietor']],
dlzkadna = dayd[['dlzkadna']]), type="response", norm.votes=TRUE)
# varImpPlot(forest)
return(predic)
dayd <- all_days[y,]
potencial <- all_days[all_days[,'datum'] != dayd[['datum']],]
diff <- vector(mode = "numeric", length = nrow(potencial))
dayd <- all_days[y,]
potencial <- all_days[all_days[,'datum'] != dayd[['datum']],]
diff <- vector(mode = "numeric", length = nrow(potencial))
diff <- sapply(1:length(diff), function(x) {
ret <- abs(dayd[['gho']] - potencial[[x,'gho']]) * 100 / scale[['gho']] * pod_gho
ret <- ret + abs(dayd[['oblacnost']] - potencial[[x,'oblacnost']]) * 100 / scale[['oblacnost']] * pod_obl
ret <- ret + abs(dayd[['teplota']] - potencial[[x,'teplota']]) * 100 / scale[['teplota']] * pod_tep
ret <- ret + abs(dayd[['vietor']] - potencial[[x,'vietor']]) * 100 / scale[['vietor']] * pod_vie
ret <- ret + abs(dayd[['dlzkadna']] - potencial[[x,'dlzkadna']]) * 100 / scale[['dlzkadna']] * pod_dlz
return(ret)
})
train_set <- arrange(as.data.frame(potencial), diff)[1:tm_velkost,]
forest <- randomForest(praca~gho+oblacnost+teplota+vietor+dlzkadna,
data=train_set, ntree = f.ntree, mtry = f.mtry)
predic <-predict(forest, data.frame(gho = dayd[['gho']], oblacnost = dayd[['oblacnost']],
teplota = dayd[['teplota']], vietor = dayd[['vietor']],
dlzkadna = dayd[['dlzkadna']]), type="response", norm.votes=TRUE)
# varImpPlot(forest)
return(predic)
predic
fve_output <- sapply(1:nrow(all_days), function(y) {
dayd <- all_days[y,]
potencial <- all_days[all_days[,'datum'] != dayd[['datum']],]
diff <- vector(mode = "numeric", length = nrow(potencial))
diff <- sapply(1:length(diff), function(x) {
ret <- abs(dayd[['gho']] - potencial[[x,'gho']]) * 100 / scale[['gho']] * pod_gho
ret <- ret + abs(dayd[['oblacnost']] - potencial[[x,'oblacnost']]) * 100 / scale[['oblacnost']] * pod_obl
ret <- ret + abs(dayd[['teplota']] - potencial[[x,'teplota']]) * 100 / scale[['teplota']] * pod_tep
ret <- ret + abs(dayd[['vietor']] - potencial[[x,'vietor']]) * 100 / scale[['vietor']] * pod_vie
ret <- ret + abs(dayd[['dlzkadna']] - potencial[[x,'dlzkadna']]) * 100 / scale[['dlzkadna']] * pod_dlz
return(ret)
})
train_set <- arrange(as.data.frame(potencial), diff)[1:tm_velkost,]
forest <- randomForest(praca~gho+oblacnost+teplota+vietor+dlzkadna,
data=train_set, ntree = f.ntree, mtry = f.mtry)
predic <-predict(forest, data.frame(gho = dayd[['gho']], oblacnost = dayd[['oblacnost']],
teplota = dayd[['teplota']], vietor = dayd[['vietor']],
dlzkadna = dayd[['dlzkadna']]), type="response", norm.votes=TRUE)
# varImpPlot(forest)
return(predic)
})
source('~/GitHub/baka/R source/presentation_tests/den_naj30_var3.R')
source('~/GitHub/baka/R source/presentation_tests/den_naj30_var3.R')
source('~/GitHub/baka/R source/presentation_tests/den_naj30_var3.R')
source('~/GitHub/baka/R source/presentation_tests/den_naj30_var3.R')
source('~/GitHub/baka/R source/presentation_tests/param1.R')
stopCluster(cl)
source('~/GitHub/baka/R source/presentation_tests/param1.R')
source('~/GitHub/baka/R source/presentation_tests/param1.R')
source('~/GitHub/baka/R source/presentation_tests/param1.R')
c(130, 110, 90, 70, 50, 30) [6]
source('~/GitHub/baka/R source/presentation_tests/param1.R')
source('~/GitHub/baka/R source/presentation_tests/param1.R')
source('~/GitHub/baka/R source/presentation_tests/param1.R')
source('~/GitHub/baka/R source/presentation_tests/den_naj30_var3.R')
source('~/GitHub/baka/R source/presentation_tests/den_naj30_var3.R')
source('~/GitHub/baka/R source/presentation_tests/den_naj30_var3.R')
source('~/GitHub/baka/R source/presentation_tests/po starom.R')
source('~/GitHub/baka/R source/presentation_tests/po starom.R')
source('~/GitHub/baka/R source/presentation_tests/po starom.R')
source('~/GitHub/baka/R source/presentation_tests/po starom.R')
source('~/GitHub/baka/R source/presentation_tests/po starom.R')
source('~/GitHub/baka/R source/presentation_tests/po starom.R')
source('~/GitHub/baka/R source/presentation_tests/po starom.R')
db.drv <- dbDriver("PostgreSQL")
if (exists("db.con")) dbDisconnect(db.con)
db.con <- getConnection(db.drv)
prog.baseAll <- dbGetQuery(db.con, "select count(*) as ccc from (select distinct * from (select datum, fve from v_data
where to_date(to_char(datum, 'DD.MM.YYYY'), 'DD.MM.2000') > to_date('20.3.2000', 'DD.MM.2000')
and to_date(to_char(datum, 'DD.MM.YYYY'), 'DD.MM.2000') <= to_date('23.9.2000', 'DD.MM.2000')
) s1) s2")
prog.baseAll
all_days <- dbGetQuery(db.con, sprintf(select, 1))
all_days
select <- " SELECT datum, sum(praca) praca, sum(gho) gho, sum(oblacnost) oblacnost,
sum(teplota) teplota, sum(vietor) vietor, max(dlzkadna) dlzkadna
FROM v_data WHERE fve = %d
and to_date(to_char(datum, 'DD.MM.YYYY'), 'DD.MM.2000') > to_date('20.3.2000', 'DD.MM.2000')
and to_date(to_char(datum, 'DD.MM.YYYY'), 'DD.MM.2000') <= to_date('23.9.2000', 'DD.MM.2000')
GROUP BY datum ORDER BY datum"
all_days <- dbGetQuery(db.con, sprintf(select, 1))
all_days
select <- " SELECT datum, sum(praca) praca, sum(gho) gho, sum(oblacnost) oblacnost,
sum(teplota) teplota, sum(vietor) vietor, max(dlzkadna) dlzkadna
FROM v_data WHERE fve = %d
GROUP BY datum ORDER BY datum"
chosen_days <- dbGetQuery(db.con, sprintf("select distinct datum from v_data
where to_date(to_char(datum, 'DD.MM.YYYY'), 'DD.MM.2000') > to_date('20.3.2000', 'DD.MM.2000')
and to_date(to_char(datum, 'DD.MM.YYYY'), 'DD.MM.2000') <= to_date('23.9.2000', 'DD.MM.2000')
ORDER BY datum", 1))
chosen_days
chosen_days <- data.matrix(chosen_days)
chosen_days
all_days[,'datum'] %in% chosen_days
all_days
all_days <- dbGetQuery(db.con, sprintf(select, i.fve))
all_days
all_days[,'datum'] %in% chosen_days
all_days[all_days[,'datum'] %in% chosen_days ,'praca']
fve_actual
length(fve_actual)
length(chosen_days)
chosen_days
chosen_days <- dbGetQuery(db.con, sprintf("select distinct datum from v_data
where to_date(to_char(datum, 'DD.MM.YYYY'), 'DD.MM.2000') > to_date('20.3.2000', 'DD.MM.2000')
and to_date(to_char(datum, 'DD.MM.YYYY'), 'DD.MM.2000') <= to_date('23.9.2000', 'DD.MM.2000')
and fve = %d
ORDER BY datum", i.fve))
chosen_days
data.matrix(chosen_days)
chosen_days <- data.matrix(chosen_days)
chosen_days
all_days[,'datum'] %in% chosen_days
length(subset(all_days[,'datum'] %in% chosen_days, TRUE))
length(subset(all_days[,'datum'] %in% chosen_days, value = T))
all_days[all_days[,'datum'] %in% chosen_days ,'praca']
fve_actual <- all_days[all_days[,'datum'] %in% chosen_days ,'praca']
fve_actual
length(fve_actual)
nrow(chosen_days)
source('~/GitHub/baka/R source/presentation_tests/param1.R')
dayd <- chosen_days[y,]
chosen_days[1,]
dayd <- chosen_days[1,]
dayd
chosen_days <- data.matrix(chosen_days)
chosen_days
all_days[all_days[,'datum'] %in% chosen_days ,]
chosen_days
all_days[,'datum'] %in% chosen_days
all_days[all_days[,'datum'] %in% chosen_days,]
chosen_days <- all_days[all_days[,'datum'] %in% chosen_days,]
chosen_days
length(chosen_days)
nrow(chosen_days)
fve_actual <- chosen_days[,'praca']
fve_actual
source('~/GitHub/baka/R source/presentation_tests/param1.R')
stats
actual
output
source('~/GitHub/baka/R source/presentation_tests/param1.R')
stats
output
actual
cbind(actual, output)
source('~/GitHub/baka/R source/presentation_tests/leto.R')
stats
source('~/GitHub/baka/R source/presentation_tests/zima.R')
source('~/GitHub/baka/R source/presentation_tests/zima.R')
source('~/GitHub/baka/R source/presentation_tests/zima.R')
all_days <- dbGetQuery(db.con, sprintf(select, i.fve))
ad_ncol <- ncol(all_days)
maxims <- sapply(all_days[,3:ad_ncol], max)
minims <- sapply(all_days[,3:ad_ncol], min)
scale <- abs(maxims - minims)
all_days <- data.matrix(all_days)
chosen_days <- dbGetQuery(db.con, sprintf("select distinct datum from v_data
where to_date(to_char(datum, 'DD.MM.YYYY'), 'DD.MM.2000') <= to_date('20.3.2000', 'DD.MM.2000')
and to_date(to_char(datum, 'DD.MM.YYYY'), 'DD.MM.2000') > to_date('23.9.2000', 'DD.MM.2000')
and fve = %d
ORDER BY datum", i.fve))
chosen_days <- data.matrix(chosen_days)
chosen_days <- all_days[all_days[,'datum'] %in% chosen_days,]
fve_actual <- chosen_days[,'praca']
clusterExport(cl, list("chosen_days", "all_days", "scale",
"i.pod_gho", "i.pod_obl", "i.pod_tep", "i.pod_vie", "i.pod_dlz",
"i.ntree", "i.mtry", "i.velkost"))
fve_output <- parSapply(cl, 1:nrow(chosen_days), function(y) {
dayd <- chosen_days[y,]
potencial <- all_days[all_days[,'datum'] != dayd[['datum']],]
diff <- vector(mode = "numeric", length = nrow(potencial))
diff <- sapply(1:length(diff), function(x) {
ret <- abs(dayd[['gho']] - potencial[[x,'gho']]) * 100 / scale[['gho']] * i.pod_gho
ret <- ret + abs(dayd[['oblacnost']] - potencial[[x,'oblacnost']]) * 100 / scale[['oblacnost']] * i.pod_obl
ret <- ret + abs(dayd[['teplota']] - potencial[[x,'teplota']]) * 100 / scale[['teplota']] * i.pod_tep
ret <- ret + abs(dayd[['vietor']] - potencial[[x,'vietor']]) * 100 / scale[['vietor']] * i.pod_vie
ret <- ret + abs(dayd[['dlzkadna']] - potencial[[x,'dlzkadna']]) * 100 / scale[['dlzkadna']] * i.pod_dlz
return(ret)
})
train_set <- arrange(as.data.frame(potencial), diff)[1:i.velkost,]
forest <- randomForest(praca~gho+oblacnost+teplota+vietor+dlzkadna,
data=train_set, ntree = i.ntree, mtry = i.mtry)
predic <-predict(forest, data.frame(gho = dayd[['gho']], oblacnost = dayd[['oblacnost']],
teplota = dayd[['teplota']], vietor = dayd[['vietor']],
dlzkadna = dayd[['dlzkadna']]), type="response", norm.votes=TRUE)
# varImpPlot(forest)
return(predic)
})
diff <- sapply(1:length(diff), function(x) {
ret <- abs(dayd[['gho']] - potencial[[x,'gho']]) * 100 / scale[['gho']] * i.pod_gho
ret <- ret + abs(dayd[['oblacnost']] - potencial[[x,'oblacnost']]) * 100 / scale[['oblacnost']] * i.pod_obl
ret <- ret + abs(dayd[['teplota']] - potencial[[x,'teplota']]) * 100 / scale[['teplota']] * i.pod_tep
ret <- ret + abs(dayd[['vietor']] - potencial[[x,'vietor']]) * 100 / scale[['vietor']] * i.pod_vie
ret <- ret + abs(dayd[['dlzkadna']] - potencial[[x,'dlzkadna']]) * 100 / scale[['dlzkadna']] * i.pod_dlz
return(ret)
})
dayd <- chosen_days[1,]
chosen_days <- dbGetQuery(db.con, sprintf("select distinct datum from v_data
where to_date(to_char(datum, 'DD.MM.YYYY'), 'DD.MM.2000') <= to_date('20.3.2000', 'DD.MM.2000')
and to_date(to_char(datum, 'DD.MM.YYYY'), 'DD.MM.2000') > to_date('23.9.2000', 'DD.MM.2000')
and fve = %d
ORDER BY datum", i.fve))
chosen_days
source('~/GitHub/baka/R source/presentation_tests/zima.R')
source('~/GitHub/baka/R source/presentation_tests/zima.R')
stats
source('~/GitHub/baka/R source/presentation_tests/zima.R')
stats
source('~/GitHub/baka/R source/presentation_tests/zima.R')
stats
sum(actual) / 513
warnings()
source('~/GitHub/baka/R source/presentation_tests/leto.R')
stats
source('~/GitHub/baka/R source/presentation_tests/leto.R')
stats
source('~/GitHub/baka/R source/presentation_tests/leto.R')
stats
sum(actual) / 636
source('~/GitHub/baka/R source/presentation_tests/leto.R')
stats
source('~/GitHub/baka/R source/presentation_tests/zima.R')
stats
source('~/GitHub/baka/R source/presentation_tests/param1.R')
stats
to_see <- cbind(all_days, output)
nrows(all_days)
nrow(all_days)
to_see <-  dbGetQuery(db.con, "SELECT datum, sum(gho) gho, sum(oblacnost) oblacnost,
sum(teplota) teplota, sum(vietor) vietor, max(dlzkadna) dlzkadna, sum(praca) praca
FROM v_data GROUP BY datum ORDER BY fve, datum")
if (exists("db.con")) dbDisconnect(db.con)
db.con <- getConnection(db.drv)
to_see <-  dbGetQuery(db.con, "SELECT datum, sum(gho) gho, sum(oblacnost) oblacnost,
sum(teplota) teplota, sum(vietor) vietor, max(dlzkadna) dlzkadna, sum(praca) praca
FROM v_data GROUP BY datum ORDER BY fve, datum")
if (exists("db.con")) dbDisconnect(db.con)
db.con <- getConnection(db.drv)
db.drv <- dbDriver("PostgreSQL")
if (exists("db.con")) dbDisconnect(db.con)
db.con <- getConnection(db.drv)
to_see <-  dbGetQuery(db.con, "SELECT datum, sum(gho) gho, sum(oblacnost) oblacnost,
sum(teplota) teplota, sum(vietor) vietor, max(dlzkadna) dlzkadna, sum(praca) praca
FROM v_data GROUP BY datum ORDER BY fve, datum")
to_see <-  dbGetQuery(db.con, "SELECT datum, sum(gho) gho, sum(oblacnost) oblacnost,
sum(teplota) teplota, sum(vietor) vietor, max(dlzkadna) dlzkadna, sum(praca) praca
FROM v_data GROUP BY fve, datum ORDER BY fve, datum")
to_see
to_see <-  dbGetQuery(db.con, "SELECT fve, datum, sum(gho) gho, sum(oblacnost) oblacnost,
sum(teplota) teplota, sum(vietor) vietor, max(dlzkadna) dlzkadna, sum(praca) praca
FROM v_data GROUP BY fve, datum ORDER BY fve, datum")
to_see
to_see <- cbind(to_see, output)
to_see
to_see
to_see <- cbind(to_see, abs(output - actual) * 100 / actual)
to_see
options(scipen=999)
to_see
to_see[1:10]
to_see[1:10,]
to_see <-  dbGetQuery(db.con, "SELECT fve, datum, sum(gho) gho, sum(oblacnost) oblacnost,
sum(teplota) teplota, sum(vietor) vietor, max(dlzkadna) dlzkadna, sum(praca) praca
FROM v_data GROUP BY fve, datum ORDER BY fve, datum")
to_see <- cbind(to_see, output)
to_see <- cbind(to_see, dif = abs(output - actual) * 100 / actual)
to_see
to_see[1:10,]
to_see <- arrange(to_see, to_see$diff)
to_see <- arrange(to_see, to_see[['diff']])
to_see <- arrange(to_see, as.vector(to_see[['diff']]))
as.vector(to_see[['diff']])
to_see <- arrange(to_see, to_see$dif)
to_see
to_see[1:100,]
to_see[1049:1149,]
stats
source('~/GitHub/baka/R source/presentation_tests/param1.R')
stats
options(max.print = 2000)
to_see
getOption("max.print")
to_see
options(max.print = 999999)
getOption("max.print")
to_see
to_see[1:10]
to_see[1:10,]
to_see[1049:1149,]
source('~/GitHub/baka/R source/presentation_tests/param1.R')
stats
source('~/GitHub/baka/R source/presentation_tests/leto.R')
stats
source('~/GitHub/baka/R source/presentation_tests/zima.R')
stats
to_see
i.pod_dlz <- pod_dlz
source('~/GitHub/baka/R source/presentation_tests/paral_hod_all.R')
source('~/GitHub/baka/R source/presentation_tests/paral_hod_all.R')
stats
db.drv <- dbDriver("PostgreSQL")
if (exists("db.con")) dbDisconnect(db.con)
db.con <- getConnection(db.drv)
to_see <-  dbGetQuery(db.con, "SELECT fve, cas, gho, oblacnost,
teplota, vietor, vlhkost, dlzkadna, elev, praca
FROM v_data GROUP BY fve ORDER BY fve, cas")
to_see <- cbind(to_see, output)
to_see <- cbind(to_see, dif = abs(output - actual) * 100 / actual)
to_see <- arrange(to_see, to_see$dif)
db.drv <- dbDriver("PostgreSQL")
if (exists("db.con")) dbDisconnect(db.con)
db.con <- getConnection(db.drv)
to_see <-  dbGetQuery(db.con, "SELECT fve, cas, gho, oblacnost,
teplota, vietor, vlhkost, dlzkadna, elev, praca
FROM v_data ORDER BY fve, cas")
to_see <- cbind(to_see, output)
to_see <- cbind(to_see, dif = abs(output - actual) * 100 / actual)
to_see <- arrange(to_see, to_see$dif)
db.drv <- dbDriver("PostgreSQL")
if (exists("db.con")) dbDisconnect(db.con)
db.con <- getConnection(db.drv)
to_see <-  dbGetQuery(db.con, "SELECT fve, cas, gho, oblacnost,
teplota, vietor, vlhkost, dlzkadna, elev, praca
FROM v_data ORDER BY fve, cas")
to_see <- cbind(to_see, output)
to_see <- cbind(to_see, dif = abs(output - actual) * 100 / actual)
to_see <- arrange(to_see, to_see$dif)
to_see
to_see
stats
source('~/GitHub/baka/R source/presentation_tests/paral_hod_all.R')
db.drv <- dbDriver("PostgreSQL")
if (exists("db.con")) dbDisconnect(db.con)
db.con <- getConnection(db.drv)
to_see <-  dbGetQuery(db.con, "SELECT fve, cas, gho, oblacnost,
teplota, vietor, vlhkost, dlzkadna, elev, praca
FROM v_data WHERE praca > 0 ORDER BY fve, cas")
to_see <- cbind(to_see, output)
to_see <- cbind(to_see, dif = abs(output - actual) * 100 / actual)
to_see <- arrange(to_see, to_see$dif)
stats
to_see
db.drv <- dbDriver("PostgreSQL")
if (exists("db.con")) dbDisconnect(db.con)
db.con <- getConnection(db.drv)
all_data <-  dbGetQuery(db.con, "SELECT fve, cas, gho, oblacnost,
teplota, vietor, vlhkost, dlzkadna, elev, praca
FROM v_data ORDER BY fve, cas")
to_see <- cbind(all_data, output)
to_see <- cbind(to_see, dif = abs(output - actual) * 100 / actual)
to_see <- arrange(to_see, to_see$dif)
all_data <-  dbGetQuery(db.con, "SELECT fve, cas, gho, oblacnost,
teplota, vietor, vlhkost, dlzkadna, elev, praca
FROM v_data ORDER BY fve, cas")
all_data <- cbind(all_data, output)
to_see <- cbind(all_data, dif = abs(output - actual) * 100 / actual)
to_see <- arrange(to_see, to_see$dif)
to_see
?ddply
all_data <-  dbGetQuery(db.con, "SELECT fve, datum, cas, gho, oblacnost,
teplota, vietor, vlhkost, dlzkadna, elev, praca
FROM v_data ORDER BY fve, cas")
all_data <- cbind(all_data, output)
to_see <- cbind(all_data, dif = abs(output - actual) * 100 / actual)
to_see <- arrange(to_see, to_see$dif)
to_see
ddply(all_data,~group,summarise,sumpraca=sum(praca),sumoutput=sum(output))
ddply(all_data,~datum,summarise,sumpraca=sum(praca),sumoutput=sum(output))
ddply(all_data,~datum,summarise, gho=sum(gho), oblacnost=sum(oblacnost),
teplota=sum(teplota), vietor=sum(vietor), vlhkost=sum(vlhkost),
dlzkadna=max(dlzkadna), praca=sum(praca),output=sum(output))
groupped <- ddply(all_data,~datum,summarise, gho=sum(gho), oblacnost=sum(oblacnost),
teplota=sum(teplota), vietor=sum(vietor), vlhkost=sum(vlhkost),
dlzkadna=max(dlzkadna), praca=sum(praca), output=sum(output))
stats_day <- all_statistics(groupped$praca, groupped$output)
stats_day
groupped <- ddply(all_data,~datum+fve,summarise, gho=sum(gho), oblacnost=sum(oblacnost),
teplota=sum(teplota), vietor=sum(vietor), vlhkost=sum(vlhkost),
dlzkadna=max(dlzkadna), praca=sum(praca), output=sum(output))
groupped
stats_day <- all_statistics(groupped$praca, groupped$output)
stats_day
source('~/GitHub/baka/R source/presentation_tests/paral_hod_all.R')
stopCluster(cl)
source('~/GitHub/baka/R source/presentation_tests/param1.R')
source('~/GitHub/baka/R source/presentation_tests/paral_hod_all.R')
stats
all_hours
prog.baseAll
actual
output
#pocet vsetkyc dni - pocitam percenta
prog.baseAll <- dbGetQuery(db.con, "select count(*) as ccc from (select distinct * from (select cas, fve from v_data) s1) s2")
prog.baseAll <- prog.baseAll$ccc
prog.opsAll <- length(tm.velkost) * length(f.ntree) * length(f.mtry) *
length(pod_gho) * length(pod_obl) * length(pod_tep) * length(pod_vie) *
length(pod_vlh) * length(pod_dlz) * length(pod_ele)
prog.baseAll <- prog.baseAll * prog.opsAll
i.pod_gho <- pod_gho
i.pod_obl <- pod_obl
i.pod_tep <- pod_tep
i.pod_vie <- pod_vie
i.pod_vlh <- pod_vlh
i.pod_dlz <- pod_dlz
i.pod_ele <- pod_ele
i.velkost <- tm.velkost
i.ntree <- f.ntree
i.mtry <- f.mtry
source('~/GitHub/baka/R source/presentation_tests/paral_hod_all.R')
stats
stats_day
db.drv <- dbDriver("PostgreSQL")
if (exists("db.con")) dbDisconnect(db.con)
db.con <- getConnection(db.drv)
all_data <-  dbGetQuery(db.con, "SELECT fve, datum, cas, gho, oblacnost,
teplota, vietor, vlhkost, dlzkadna, elev, praca
FROM v_data ORDER BY fve, cas")
all_data <- cbind(all_data, output)
to_see <- cbind(all_data, dif = abs(output - actual) * 100 / actual)
to_see <- arrange(to_see, to_see$dif)
groupped <- ddply(all_data,~datum+fve,summarise, gho=sum(gho), oblacnost=sum(oblacnost),
teplota=sum(teplota), vietor=sum(vietor), vlhkost=sum(vlhkost),
dlzkadna=max(dlzkadna), praca=sum(praca), output=sum(output))
stats_day <- all_statistics(groupped$praca, groupped$output)
stats_day
cc <- dbGetQuery(db.con, "select count(*) as cc from (select distinct * from (select cas, fve from v_data) s1) s2")$cc
cc
cc_all <- dbGetQuery(db.con, "select count(*) as cc from (select distinct * from (select cas, fve from v_data_all) s1) s2")$cc
cc_120 <- dbGetQuery(db.con, "select count(*) as cc from (select distinct * from (select cas, fve from v_data_120) s1) s2")$cc
perc_120 <- cc_120 * 100 / cc_all
perc_120
cc_120
cc_all
perc <- cc * 100 / cc_all
perc
source('~/.active-rstudio-document')
summ
sum_120
sum_all
source('~/.active-rstudio-document')
perc_summ
perc_sum_120
sum_all
source('~/.active-rstudio-document')
options(digits = 4)
source('~/.active-rstudio-document')
source('~/GitHub/baka/R source/presentation_tests/paral_hod_all.R')
stats
stats_day
source('~/GitHub/baka/R source/presentation_tests/paral_hod_all.R')
stats
stats_day
# db.drv <- dbDriver("PostgreSQL")
# if (exists("db.con")) dbDisconnect(db.con)
db.con <- getConnection(db.drv)
all_data <-  dbGetQuery(db.con, "SELECT fve, datum, cas, gho, oblacnost,
teplota, vietor, vlhkost, dlzkadna, elev, praca
FROM v_data_120 ORDER BY fve, cas")
all_data <- cbind(all_data, output)
to_see <- cbind(all_data, dif = abs(output - actual) * 100 / actual)
to_see <- arrange(to_see, to_see$dif)
groupped <- ddply(all_data,~datum+fve,summarise, gho=sum(gho), oblacnost=sum(oblacnost),
teplota=sum(teplota), vietor=sum(vietor), vlhkost=sum(vlhkost),
dlzkadna=max(dlzkadna), praca=sum(praca), output=sum(output))
stats_day <- all_statistics(groupped$praca, groupped$output)
# db.drv <- dbDriver("PostgreSQL")
# if (exists("db.con")) dbDisconnect(db.con)
db.con <- getConnection(db.drv)
all_data <-  dbGetQuery(db.con, "SELECT fve, datum, cas, gho, oblacnost,
teplota, vietor, vlhkost, dlzkadna, elev, praca
FROM v_data_120 ORDER BY fve, cas")
all_data <- cbind(all_data, output)
to_see <- cbind(all_data, dif = abs(output - actual) * 100 / actual)
to_see <- arrange(to_see, to_see$dif)
groupped <- ddply(all_data,~datum+fve,summarise, gho=sum(gho), oblacnost=sum(oblacnost),
teplota=sum(teplota), vietor=sum(vietor), vlhkost=sum(vlhkost),
dlzkadna=max(dlzkadna), praca=sum(praca), output=sum(output))
stats_day <- all_statistics(groupped$praca, groupped$output)
stats_day
source('~/GitHub/baka/R source/presentation_tests/paral_hod_all.R')
stats
stats_day
source('~/GitHub/baka/R source/presentation_tests/paral_hod_all.R')
