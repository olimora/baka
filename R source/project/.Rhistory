# +
#   ifelse(in_vlh, (abs(t.chosen_one[['vlhkost']] - t.potencial[[j,'vlhkost']]) * 100 / scale.scale[['vlhkost']]) * pod_vlh, 0)
# +
#   ifelse(in_tla, (abs(t.chosen_one[['tlak']] - t.potencial[[j,'tlak']]) * 100 / scale.scale[['tlak']]) * pod_tla, 0)
+
ifelse(in_dlz, (abs(t.chosen_one[['dlzkadna']] - t.potencial[[j,'dlzkadna']]) * 100 / scale.scale[['dlzkadna']]) * pod_dlz, 0)
# +
#   ifelse(in_azi, (abs(t.chosen_one[['azim']] - t.potencial[[j,'azim']]) * 100 / scale.scale[['azim']]) * pod_azi, 0)
+
ifelse(in_ele, (abs(t.chosen_one[['elev']] - t.potencial[[j,'elev']]) * 100 / scale.scale[['elev']]) * pod_ele, 0)
)
}
t.potencial <- cbind(t.potencial, t.differ)
View(t.potencial)
arrange(t.potencial, t.potencial[,'t.differ'])
t.potencial[order(t.potencial[,'t.differ'])]
View(t.potencial)
t.potencial[order(t.differ)]
t.potencial <- t.all_hours[t.all_hours[,'datum'] != day,]
t.potencial <- t.potencial[order(t.differ)]
View(tm.potencial)
t.potencial
t.potencial <- t.all_hours[t.all_hours[,'datum'] != day,]
t.potencial[order(t.differ),]
t.potencial <- t.potencial[order(t.differ),]
t.potencial <- t.potencial[order(t.differ),]
t.potencial <- t.potencial[order(t.differ),]
View(t.potencial)
t.potencial <- t.all_hours[t.all_hours[,'datum'] != day,]
# vypocitat rozdielnost
t.differ <- vector(mode = "numeric", length = nrow(t.potencial))
for (j in 1:nrow(t.potencial)) { #nrow(t.train_set)
t.differ[j] <- (
ifelse(in_gho, (abs(t.chosen_one[['gho']] - t.potencial[[j,'gho']]) * 100 / scale.scale[['gho']]) * pod_gho, 0)
#   +
#     ifelse(in_obl, (abs(t.chosen_one[['oblacnost']] - t.potencial[[j,'oblacnost']]) * 100 / scale.scale[['oblacnost']]) * pod_obl, 0)
#   +
#     ifelse(in_tep, (abs(t.chosen_one[['teplota']] - t.potencial[[j,'teplota']]) * 100 / scale.scale[['teplota']]) * pod_tep, 0)
#   +
#     ifelse(in_vie, (abs(t.chosen_one[['vietor']] - t.potencial[[j,'vietor']]) * 100 / scale.scale[['vietor']]) * pod_vie, 0)
#   # +
#   #   ifelse(in_vlh, (abs(t.chosen_one[['vlhkost']] - t.potencial[[j,'vlhkost']]) * 100 / scale.scale[['vlhkost']]) * pod_vlh, 0)
#   # +
#   #   ifelse(in_tla, (abs(t.chosen_one[['tlak']] - t.potencial[[j,'tlak']]) * 100 / scale.scale[['tlak']]) * pod_tla, 0)
#   +
#     ifelse(in_dlz, (abs(t.chosen_one[['dlzkadna']] - t.potencial[[j,'dlzkadna']]) * 100 / scale.scale[['dlzkadna']]) * pod_dlz, 0)
#   # +
#   #   ifelse(in_azi, (abs(t.chosen_one[['azim']] - t.potencial[[j,'azim']]) * 100 / scale.scale[['azim']]) * pod_azi, 0)
#   +
#     ifelse(in_ele, (abs(t.chosen_one[['elev']] - t.potencial[[j,'elev']]) * 100 / scale.scale[['elev']]) * pod_ele, 0)
# )
}
t.potencial <- t.potencial[order(t.differ),]
View(t.potencial)
t.differ
t.differ <- vector(mode = "numeric", length = nrow(t.potencial))
for (j in 1:nrow(t.potencial)) { #nrow(t.train_set)
t.differ[j] <- (
ifelse(in_gho, (abs(t.chosen_one[['gho']] - t.potencial[[j,'gho']]) * 100 / scale.scale[['gho']]) * pod_gho, 0)
#   +
#     ifelse(in_obl, (abs(t.chosen_one[['oblacnost']] - t.potencial[[j,'oblacnost']]) * 100 / scale.scale[['oblacnost']]) * pod_obl, 0)
#   +
#     ifelse(in_tep, (abs(t.chosen_one[['teplota']] - t.potencial[[j,'teplota']]) * 100 / scale.scale[['teplota']]) * pod_tep, 0)
#   +
#     ifelse(in_vie, (abs(t.chosen_one[['vietor']] - t.potencial[[j,'vietor']]) * 100 / scale.scale[['vietor']]) * pod_vie, 0)
#   # +
#   #   ifelse(in_vlh, (abs(t.chosen_one[['vlhkost']] - t.potencial[[j,'vlhkost']]) * 100 / scale.scale[['vlhkost']]) * pod_vlh, 0)
#   # +
#   #   ifelse(in_tla, (abs(t.chosen_one[['tlak']] - t.potencial[[j,'tlak']]) * 100 / scale.scale[['tlak']]) * pod_tla, 0)
#   +
#     ifelse(in_dlz, (abs(t.chosen_one[['dlzkadna']] - t.potencial[[j,'dlzkadna']]) * 100 / scale.scale[['dlzkadna']]) * pod_dlz, 0)
#   # +
#   #   ifelse(in_azi, (abs(t.chosen_one[['azim']] - t.potencial[[j,'azim']]) * 100 / scale.scale[['azim']]) * pod_azi, 0)
#   +
#     ifelse(in_ele, (abs(t.chosen_one[['elev']] - t.potencial[[j,'elev']]) * 100 / scale.scale[['elev']]) * pod_ele, 0)
# )
}
# vypocitat rozdielnost
t.differ <- vector(mode = "numeric", length = nrow(t.potencial))
for (j in 1:nrow(t.potencial)) { #nrow(t.train_set)
t.differ[j] <- (
ifelse(in_gho, (abs(t.chosen_one[['gho']] - t.potencial[[j,'gho']]) * 100 / scale.scale[['gho']]) * pod_gho, 0)
#   +
#     ifelse(in_obl, (abs(t.chosen_one[['oblacnost']] - t.potencial[[j,'oblacnost']]) * 100 / scale.scale[['oblacnost']]) * pod_obl, 0)
#   +
#     ifelse(in_tep, (abs(t.chosen_one[['teplota']] - t.potencial[[j,'teplota']]) * 100 / scale.scale[['teplota']]) * pod_tep, 0)
#   +
#     ifelse(in_vie, (abs(t.chosen_one[['vietor']] - t.potencial[[j,'vietor']]) * 100 / scale.scale[['vietor']]) * pod_vie, 0)
#   # +
#   #   ifelse(in_vlh, (abs(t.chosen_one[['vlhkost']] - t.potencial[[j,'vlhkost']]) * 100 / scale.scale[['vlhkost']]) * pod_vlh, 0)
#   # +
#   #   ifelse(in_tla, (abs(t.chosen_one[['tlak']] - t.potencial[[j,'tlak']]) * 100 / scale.scale[['tlak']]) * pod_tla, 0)
#   +
#     ifelse(in_dlz, (abs(t.chosen_one[['dlzkadna']] - t.potencial[[j,'dlzkadna']]) * 100 / scale.scale[['dlzkadna']]) * pod_dlz, 0)
#   # +
#   #   ifelse(in_azi, (abs(t.chosen_one[['azim']] - t.potencial[[j,'azim']]) * 100 / scale.scale[['azim']]) * pod_azi, 0)
#   +
#     ifelse(in_ele, (abs(t.chosen_one[['elev']] - t.potencial[[j,'elev']]) * 100 / scale.scale[['elev']]) * pod_ele, 0)
)
}
t.differ
t.potencial <- t.potencial[order(t.differ),]
View(t.potencial)
forest <- randomForest(formula, data=t.train_set, ntree = i.ntree, mtry = i.mtry, importance=TRUE, proximity=TRUE)
t.train_set <- t.all_hours[t.all_hours[,'datum'] != day,]
# vypocitat rozdielnost
t.differ <- vector(mode = "numeric", length = nrow(t.train_set))
for (j in 1:nrow(t.train_set)) { #nrow(t.train_set)
t.differ[j] <- (
ifelse(in_gho, (abs(t.chosen_one[['gho']] - t.train_set[[j,'gho']]) * 100 / scale.scale[['gho']]) * pod_gho, 0)
#   +
#     ifelse(in_obl, (abs(t.chosen_one[['oblacnost']] - t.train_set[[j,'oblacnost']]) * 100 / scale.scale[['oblacnost']]) * pod_obl, 0)
#   +
#     ifelse(in_tep, (abs(t.chosen_one[['teplota']] - t.train_set[[j,'teplota']]) * 100 / scale.scale[['teplota']]) * pod_tep, 0)
#   +
#     ifelse(in_vie, (abs(t.chosen_one[['vietor']] - t.train_set[[j,'vietor']]) * 100 / scale.scale[['vietor']]) * pod_vie, 0)
#   # +
#   #   ifelse(in_vlh, (abs(t.chosen_one[['vlhkost']] - t.train_set[[j,'vlhkost']]) * 100 / scale.scale[['vlhkost']]) * pod_vlh, 0)
#   # +
#   #   ifelse(in_tla, (abs(t.chosen_one[['tlak']] - t.train_set[[j,'tlak']]) * 100 / scale.scale[['tlak']]) * pod_tla, 0)
#   +
#     ifelse(in_dlz, (abs(t.chosen_one[['dlzkadna']] - t.train_set[[j,'dlzkadna']]) * 100 / scale.scale[['dlzkadna']]) * pod_dlz, 0)
#   # +
#   #   ifelse(in_azi, (abs(t.chosen_one[['azim']] - t.train_set[[j,'azim']]) * 100 / scale.scale[['azim']]) * pod_azi, 0)
#   +
#     ifelse(in_ele, (abs(t.chosen_one[['elev']] - t.train_set[[j,'elev']]) * 100 / scale.scale[['elev']]) * pod_ele, 0)
)
}
t.train_set <- t.train_set[order(t.differ),]
t.train_set <- t.train_set[1:i.tn_velkost,]
View(t.train_set)
forest <- randomForest(formula, data=t.train_set, ntree = i.ntree, mtry = i.mtry, importance=TRUE, proximity=TRUE)
output_hod <- predict(forest, t.chosen_one, type="response", norm.votes=TRUE)
View(t.train_set)
output_hod <- predict(forest, t.chosen_one[,4:10], type="response", norm.votes=TRUE)
forest <- randomForest(formula, data=t.train_set, ntree = i.ntree, mtry = i.mtry, importance=TRUE, proximity=TRUE)
output_hod <- append(output_hod, predict(forest, t.chosen_one, type="response", norm.votes=TRUE))
output_hod <- append(output_hod, predict(forest, t.chosen_one[4:10], type="response", norm.votes=TRUE))
?predict
?randomForest::predict.randomForest
t.chosen_one
t.chosen_one <- t.chosen_hours[1,]
t.chosen_one
options(digits = 6)
t.chosen_one
t.chosen_one[4:10]
t.chosen_one[,4:10]
output_hod <- append(output_hod, predict(forest, t.chosen_hours[1,], type="response", norm.votes=TRUE))
t.chosen_hours[1,]
t.chosen_one[['gho']]
t.chosen_one[,4:10]
t.chosen_one[,4:10]
t.chosen_one[4:10]
data.matrix(t.chosen_one[4:10])
output_hod <- append(output_hod, predict(forest, data.matrix(t.chosen_one[4:10]), type="response", norm.votes=TRUE))
data.frame(t.chosen_one[4:10])
output_hod <- append(output_hod, predict(forest, data.frame(t.chosen_one[4:10]), type="response", norm.votes=TRUE))
predict(forest, data.frame(t.chosen_one[4:10]), type="response", norm.votes=TRUE)
t.chosen_one['gho']
inn <- data.frame(gho = as.numeric(t.chosen_one['gho']))
inn
output_hod <- append(output_hod, predict(forest, inn, type="response", norm.votes=TRUE))
t.chosen_one['gho']
data.frame(t.chosen_one['gho'])
output_hod <- append(output_hod, predict(forest, data.frame(t.chosen_one['gho']), type="response", norm.votes=TRUE))
output_hod <- append(output_hod, predict(forest, t.chosen_one['gho'], type="response", norm.votes=TRUE))
inn <- data.matrix(gho = as.numeric(t.chosen_one['gho']))
inn <- data.frame(gho = as.numeric(t.chosen_one['gho']))
colnames(t.chosen_one)
names(t.chosen_one)
names(t.chosen_one) <- make.names(names(t.chosen_one))
names(t.chosen_one)
output_hod <- append(output_hod, predict(forest, t.chosen_one, type="response", norm.votes=TRUE))
inn <- data.frame(t.chosen_one)
inn
output_hod <- append(output_hod, predict(forest, inn, type="response", norm.votes=TRUE))
inn <- data.frame(t.chosen_one, check.names=TRUE)
inn
output_hod <- append(output_hod, predict(forest, inn, type="response", norm.votes=TRUE))
as.table(t.chosen_one)
as.data.frame(as.table(t.chosen_one))
output_hod <- append(output_hod, predict(forest, as.table(t.chosen_one), type="response", norm.votes=TRUE))
output_hod <- append(output_hod, predict(forest, as.data.frame(as.table(t.chosen_one)), type="response", norm.votes=TRUE))
?data.frame
as.data.frame(as.table(t.chosen_hours))
as.data.frame(t.chosen_hours)
as.data.frame(t.chosen_one)
as.data.frame(t.chosen_hours)
as.data.frame(as.table(t.chosen_hours))
as.data.frame(t.chosen_hours)
t.chosen_hours_df <- as.data.frame(t.chosen_hours)
output_hod <- append(output_hod, predict(forest, t.chosen_hours_df[hour,], type="response", norm.votes=TRUE))
output_hod
output_hod <- c()
output_hod <- append(output_hod, predict(forest, t.chosen_hours_df[hour,], type="response", norm.votes=TRUE))
output_hod
output_hod <- append(output_hod, predict(forest, t.chosen_hours_df[hour,], type="response", norm.votes=TRUE))
output_hod
source('~/GitHub/baka/R source/project/rf_hod_fast.R')
scale.scale[['gho']]
scale.scale
t.all_hours
t.ncol
t.all_hours[,4:t.ncol]
sapply(t.all_hours[,4:t.ncol], max)
t.all_hours[,'datum']
t.all_days
source('~/GitHub/baka/R source/project/rf_hod_fast.R')
t.chosen_hours <- t.all_hours[t.all_hours[,'datum'] == day,]
t.chosen_hours_df <- as.data.frame(t.chosen_hours)
t.train_set <- t.all_hours[t.all_hours[,'datum'] != day,]
actual[vec.i] <- sum(t.chosen_hours[,'praca'])
output_hod <- vector(mode = "numeric", length = nrow(t.chosen_hours))
inn <- data.frame(gho = as.numeric(t.chosen_one['gho']), oblacnost = as)
inn <- data.frame(t.chosen_one, check.names=TRUE)
source('~/GitHub/baka/R source/project/rf_hod_fast.R')
warnings()
source('~/GitHub/baka/R source/project/rf_hod_fast.R')
source('~/GitHub/baka/R source/project/rf_hod_fast.R')
source('~/GitHub/baka/R source/project/rf_hod_fast.R')
warnings()
stats
day
t.all_days
sum(t.chosen_hours[,'praca'])
sum(output_hod)
output_hod
t.chosen_hours
source('~/GitHub/baka/R source/project/rf_hod_fast.R')
stats
cbind(actual, output)
source('~/GitHub/baka/R source/project/rf_hod_fast.R')
source('~/GitHub/baka/R source/project/rf_hod_fast.R')
stats
source('~/GitHub/baka/R source/project/rf_hod_fast.R')
stats
cbind(actual, output)
source('~/GitHub/baka/R source/project/rf_hod_fast.R')
stats
t.chosen_one[['gho']]
t.train_set[[1,'gho']]
scale.scale[['gho']]
source('~/GitHub/baka/R source/project/rf_hod_fast.R')
stats
warnings()
t.train_set_df
t.train_set[,3:ncol(t.train_set)
]
t.chosen_hours_df[hour,]
t.chosen_hours_df[hour,4:10]
t.train_set
source('~/GitHub/baka/R source/project/rf_hod_fast.R')
warnings()
stats
forest <- randomForest(formula, data=t.train_set_df, ntree = i.ntree, mtry = i.mtry, importance=TRUE, proximity=TRUE)
output_hod[hour] <- predict(forest, t.chosen_hours_df[hour,4:10], type="response", norm.votes=TRUE)
t.chosen_hours_df$gho
t.chosen_hours_df[hour,4:10]
source('~/GitHub/baka/R source/project/rf_hod_fast.R')
source('~/GitHub/baka/R source/project/rf_hod_fast.R')
source('~/GitHub/baka/R source/project/rf_hod_fast.R')
source('~/GitHub/baka/R source/project/rf_hod_fast.R')
source('~/GitHub/baka/R source/project/rf_hod_fast.R')
source('~/GitHub/baka/R source/project/rf_hod_fast.R')
source('~/GitHub/baka/R source/project/rf_hod_fast.R')
source('~/GitHub/baka/R source/project/rf_hod_fast.R')
source('~/GitHub/baka/R source/project/rf_hod_fast.R')
warnings()
sqrt(4)
library(sirad)
c(29.3858, 0, 24.8781, 0)
c(23.2617, 0, 18.8399, 0)
c(1:4)
library(plotly)
install.packages(plotly)
install.packages("plotly")
vysledky
vysledky <- data.frame(nastavenia = as.numeric(c(1:4)),
rrmse = as.numeric(c(29.3858, 0, 24.8781, 0)),
rmae = as.numeric(c(23.2617, 0, 18.8399, 0)))
vysledky
plot_ly(x = vysledky[,'nastavenia'], y = c(0:10))
library(plotly)
plot_ly(x = vysledky[,'nastavenia'], y = c(0:10))
plot_ly(x = vysledky[,'nastavenia'], y = c(0:10), type = "bar")
c('A':'D')
ggplot2::diamonds %>% count(cut, clarity) %>%
plot_ly(x = cut, y = n, type = "bar", color = clarity)
barplot(vysledky[,2:3], xlab = "nastavenia", col = c("blue, red"), legend = c(1:100), beside = T)
vysledky[,2:3]
barplot(vysledky[,2:3], xlab = "nastavenia", col = c("blue, red"), legend = colnames(vysledky[,2:3]), beside = T)
ggplot(vysledky, aes(x=nastavenia, y=rrmse)) + geom_bar(stat="identity") +
labs(x="nastavenia", y="chyba")
ggplot(vysledky, aes(x=nastavenia, y=rrmse+rmae)) + geom_bar(stat="identity") +
labs(x="nastavenia", y="chyba")
ggplot(vysledky, aes(x=nastavenia, y=c(rrmse,rmae)) + geom_bar(stat="identity") +
labs(x="nastavenia", y="chyba"))
plot_ly(x = vysledky[,1], y = vysledky[,2:3], type = "bar", color = clarity)
plot_ly(x = vysledky[,1], y = vysledky[,2:3], type = "bar", color = "red")
library(lattice)
colnames(vysledky)
colnames(vysledky)[2:3])
colnames(vysledky)[2:3]
ggplot(vysledky, aes(nastavenia, chyba, fill = colnames(vysledky)[2:3])) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
vysledky
vys  <- read.table(header = T, text='nastavenia rrmse, rmae')
vys  <- read.table(header = T, text='nastavenia rrmse')
vys  <- read.table(header = T, text='nastavenia metrika chyba
1    1   rrmse   29.3858
2    1   rmae    23.2617
3    2   rrmse   25,0472
4    2   rmae    19,1183
5    3   rrmse   24,8781
6    3   rmae    18,8399
7  4 rrmse 10
8  4 rmae  8')
vys
vys  <- read.table(header = T, text='nastavenia metrika chyba
1 1 rrmse 29.3858
2 1 rmae  23.2617
3 2 rrmse 25,0472
4 2 rmae  19,1183
5 3 rrmse 24,8781
6 3 rmae  18,8399
7 4 rrmse 10
8 4 rmae  8')
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
vys  <- read.table(header = T, text='nastavenia metrika chyba
1 1 rrmse 29.3858
2 1 rmae  23.2617
3 2 rrmse 25,0472
4 2 rmae  19,1183
5 3 rrmse 24,8781
6 3 rmae  18,8399
7 4 rrmse 24,12
8 4 rmae  18,7')
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(vys, aes(nastavenia, c(0:50), fill = metrika)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
library(lattice)
barchart(chyba~nastavenia,data=vys,groups=metrika,
scales=list(x=list(rot=90,cex=0.8)))
barchart(nastavenia~chyba,data=vys,groups=metrika,
scales=list(x=list(rot=90,cex=0.8)))
barchart(nastavenia~chyba,data=vys,groups=metrika,
scales=list(x=list(c(1:4))))
barchart(chyba~nastavenia,data=vys,groups=metrika,
scales=list(x=list(c(1:4))))
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
vys  <- read.table(header = T, text='nastavenia metrika chyba
1 1 rrmse 29.3858
2 1 rmae  23.2617
3 2 rrmse 25,0472
4 2 rmae  19,1183
5 3 rrmse 24,8781
6 3 rmae  18,8399')
library(ggplot2)
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(vys, aes(clarity, fill=cut)) + geom_bar(position="dodge")
c <- c(1,2)
d <- c(3,5)
e <- c(5,6)
f <- c(4,4)
dat <- cbind(c,d,e,f)
barplot(dat,beside=TRUE)
a <- c(29.3858, 23.2617)
b <- c(25,0472, 19,1183)
c <- c(24,8781, 18,8399)
dat <- cbind(a,b,c)
barplot(dat,beside=TRUE)
a <- c(29.3858, 23.2617)
b <- c(25.0472, 19.1183)
c <- c(24.8781, 18.8399)
dat <- cbind(a,b,c)
barplot(dat,beside=TRUE)
library(ggplot2)
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="scale", position = "dodge") +
scale_fill_brewer(palette = "Set1")
library(ggplot2)
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="bin", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="count", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(position = "dodge") +
scale_fill_brewer(palette = "Set1")
barplot(vysledky,beside=TRUE)
a <- c(29.3858, 23.2617)
aa <- c(25.1673, 19.1493)
b <- c(25.0472, 19.1183)
c <- c(24.8781, 18.8399)
dat <- cbind(a,aa,b,c)
barplot(dat,beside=TRUE)
a <- c(29.3858, 23.2617)
b <- c(25.1673, 19.1493)
c <- c(24.8781, 18.8399)
dat <- cbind(a,b,c)
barplot(dat,beside=TRUE)
text(x= dat+0.3, y= bplt, labels=as.character(dat), xpd=TRUE)
vys  <- read.table(header = T, text='nastavenia metrika chyba
1 1 rrmse 29.3858
2 1 rmae  23.2617
3 2 rrmse 25,0472
4 2 rmae  19,1183
5 3 rrmse 24,8781
6 3 rmae  18,8399')
library(ggplot2)
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(vys, aes(nastavenia, chyba, fill = facotr(metrika))) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(vys, aes(nastavenia, chyba, fill = factor(metrika))) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_manual(palette = "Set1")
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_continuous(palette = "Set1")
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1") + ylab("Percentage")
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="identity", position = "dodge", show.legend = T) +
scale_fill_brewer(palette = "Set1")
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1") +
scale_y_continuous(breaks = seq(0, 100, 10))
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1") +
scale_y_continuous(breaks = seq(0, 100, 0.0001))
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1") +
+scale_y_continuous(breaks = seq(0, 100, 10)) +
coord_cartesian(ylim=c(0,100))
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1") +
scale_y_continuous(breaks = seq(0, 100, 10)) +
coord_cartesian(ylim=c(0,100))
vys  <- read.table(header = T, text='nastavenia metrika chyba
1 1 rrmse 29.3858
2 1 rmae  23.2617
3 2 rrmse 25.0472
4 2 rmae  19.1183
5 3 rrmse 24.8781
6 3 rmae  18.8399')
library(ggplot2)
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1") +
scale_y_continuous(breaks = seq(0, 100, 10)) +
coord_cartesian(ylim=c(0,100))
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1")
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1") +
geom_text(aes(label = chyba, y = pos), size = 3)
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1") +
geom_text(aes(label = chyba, y = chyba), size = 3)
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1") +
geom_text(aes(label = chyba, y = 1), size = 3)
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1") +
geom_text(aes(label = chyba, y = chyba), size = 3)
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1") +
geom_text(aes(label = metrika, y = chyba), size = 3)
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1") +
geom_text(aes(label = chyba, y = chyba), size = 5)
