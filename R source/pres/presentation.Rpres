<style>
.notimportant {
  color: 	#909090
}

</style>

PREDIKCIA VÝROBY ELEKTRINY Z OBNOVITEĽNÝCH ZDROJOV SO ZOHĽADNENÍM EXTERNÝCH FAKTOROV
========================================================
author: Oliver Moravčík
date: 14.4.2016
autosize: true
font-family: 'Helvetica'

Prehľad
========================================================
- Cieľ
  - predpovedať produkciu fotovoltaických elektrární na deň dopredu
- Dáta 
  - meteorologické predpovede od SHMÚ, model Aladin 
  - záznamy z produkcie FVE (fotovoltaických elektrární)
  - slnečné koordináty / solárne dáta
  - PostgreSQL
- Model predpovede
  - R
  - random forest

Dáta
========================================================
- formát csv
- Aladin
  - dátum a čas v UTC, hodinové kroky
  - teplota
  - rýchlosť vetra
  - celková oblačnosť (%)
  - relatívna vlhkosť (%)
  - globálne ožiarenie
  - <div class="notimportant">smer vetra</div>
  - <div class="notimportant">atmosferický tlak</div>
  - bodové záznamy => konkrétny bod na časovej osi

========================================================
- FVE
  - dátum a čas v CEST, 15-minutové kroky
  - <div class="notimportant">výkon [kW]</div>
  - energia (práca) [kWh]
  - intervalové záznamy => záznam z 12:00 = 11:45 - 12:00
  - niekoľko chybových záznamov/dní

========================================================
- Slnečné koordináty / solárne dáta:
  - azimut (od východu na západ)
  - elevácia (výška Slnka na oblohe)
  - dĺžka dňa (počet hodín, kedy je Slnko nad horizontom)

```{r eval=FALSE}
library(insol)
library(RPostgreSQL)
all_hours <- seq(ISOdate(2014,7,1,00), 
                 ISOdate(2015,11,1,00),by='hour')
sun_pos <- sunpos(sunvector(JD(all_hours), 
                            lat, long, tmz))
sun_pos <- cbind(sun_pos, 
                 elev = 90 - sun_pos[,'zenith'])
sun_pos <- data.frame(sun_pos, 
                  time = as.character(all_hours))

```

Metriky presnosti
========================================================
- hodnoty nameranej vyprodukovanej energie sú sčítané za celý deň
- odmocnená stredná kvadratická chyba
- predpovedaná hodnota - $y_{i,p}$, skutočná hodnota - $y_{i,s}$ 
- odmocnená stredná kvadratická chyba
$$RMSE=\sqrt{\frac{1}{N}\sum_{i=1}^{N}(y_{i,p} - y_{i,s})^n}$$
- priemerná absolútna chyba
$$MAE=\frac{1}{N}\sum_{i=1}^{N}|y_{i,p} - y_{i,s}|$$

========================================================
- normalizované (%)
$$RRMSE=RMSE*\frac{100}{\frac{1}{N}\sum_{i=1}^{N}y_{i,s}}$$
<br><br>
```{r, eval=FALSE}
library(sirad)
statistics <- modeval(predicted, actual, stat=c("RMSE","RRMSE","MAE","RMAE"))
```

Random forest
========================================================
- náhodný les regresných stromov
- každý strom z náhodnej podmnožiny prediktorov
- každý uzol je vytvorený ako najlepšie možné rozdelenie, podľa prediktorov náhodne vybraných pri danom uzle
- výber prediktorov do podmnožín má normálne rozdelenie
- výstup je najpočetnejší hlas (klasifikácia), resp. priemer hlasov (regresia) 

```{r, eval=FALSE}
library(randomForest)
forest <- randomForest(data=train_set,
  formula=praca~gho+oblacnost+teplota+dlzkadna)
output <- predict(forest, test_set, type="response", norm.votes=TRUE)

```

Nastavenia modelu
========================================================
- po dnoch: 
  - počet stromov: 700
  - počet uzlov stromu: 2 z 5
  - veľkosť trénovacej množiny: 110

- po hodinách:
  - počet stromov: 500
  - počet uzlov stromu: 2 z 7
  - veľkosť trénovacej množiny: 30
- počet uzlov stromu = odmicnina z počtu prediktorov
  
Výber trénovacej množiny
========================================================
- najpodobnejšie dni
- faktory podobnosti:
  - globálne žiarenie: 90
  - teplota: 10
  - vietor: 1
  
***
- po dňoch:
- po hodinách:

Výsledky
========================================================
left: 60%
```{r, echo=FALSE}
vys  <- read.table(header = T, text='nastavenia metrika chyba
 1 a rrmse 29.3858
 2 a rmae  23.2617
 3 b rrmse 25.1673
 4 b rmae  19.1493
 5 c rrmse 24.8781
 6 c rmae  18.8399')
vys$metrika <- factor(vys$metrika, levels = c("rrmse", "rmae"))
library(ggplot2)
ggplot(vys, aes(nastavenia, chyba, fill = metrika)) + 
 geom_bar(stat="identity", position = "dodge", show.legend = F) + 
 scale_fill_brewer(palette = "Set1") +
  geom_text(aes(label = chyba, y = chyba), size = 9)
```
***
- červená = RMAE
- modrá = RRMSE

- predch. 30 dní
- žiarenie * 1 
- žiarenie * 90   
`+` teplota * 10   
`+` vietor * 1

Leto vs. zima
========================================================
- leto = 21. marec až 23. september
- zima = 24. september až 20. marec
- 2.4 x viac vyrobenej energie v lete
- 2.34 x menšia RRMSE v lete
- 2.44 x menšia RMAE v lete

========================================================
left: 50%
Výroba

```{r, echo=FALSE}
df  <- read.table(header = T, text='obdobie vyrobene
 1 zima 683.63
 2 leto 1646.82')
df$obdobie <- factor(df$obdobie, levels = c("zima", "leto"))
library(ggplot2)
ggplot(data=df, aes(x=obdobie, y=vyrobene)) +
  geom_bar(stat="identity") + 
 geom_text(aes(label = vyrobene, y = vyrobene), size = 9) + 
 scale_fill_brewer(palette = "Set1")
```
***
Chybovosť

```{r, echo=FALSE}
df  <- read.table(header = T, text='obdobie metrika chyba
 1 zima rrmse 45.7
 2 zima rmae  34.6
 3 leto rrmse 19.5
 4 leto rmae  14.2')
df$obdobie <- factor(df$obdobie, levels = c("zima", "leto"))
df$metrika <- factor(df$metrika, levels = c("rrmse", "rmae"))
library(ggplot2)
ggplot(df, aes(obdobie, chyba, fill = metrika)) + 
 geom_bar(stat="identity", position = "dodge", show.legend = F) + 
 scale_fill_brewer(palette = "Set1") +
  geom_text(aes(label = chyba, y = chyba), size = 9)
```


Zrýchlenie výpočtov v R
========================================================
- alokácia pamäti
- vektorizácia (namiesto cyklov)
- matica namiesto data.frame
- paralelizmus


```{r, eval=FALSE}
library(snow)
cl <- makeCluster(4, type='SOCK')
clusterEvalQ(cl, myFun <- function(x) UseMethod("myFun"))
clusterEvalQ(cl, { library(plyr); library(randomForest) })
clusterExport(cl, list("var1", "var2"))
output <- parSapply(cl, vec, function(x) {return(vec + var1 + var2)})
stopCluster(cl)
```

========================================================

```{r, echo=FALSE}
casy  <- read.table(header = T, text='sposob velkost sekundy
 1 a m 87
 2 b m 35
 3 c m 16')
library(ggplot2)
ggplot(casy, aes(sposob, sekundy, fill = velkost)) + 
 geom_bar(stat="identity", position = "dodge", show.legend = F) + 
 geom_text(aes(label = sekundy, y = sekundy), size = 9) + 
 scale_fill_brewer(palette = "Set1")
```
***
- a = prvotný kód
- b = alokácia pamäti, vektorizované výpočty, matica namiesto tabuľky
- c = paralelizované

Intel(R) Core(TM) i5-2450M CPU @ 2.50GHz

2 jadrá - 4 thready

