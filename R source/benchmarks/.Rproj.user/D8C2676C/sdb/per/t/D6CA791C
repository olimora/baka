{
    "collab_server" : "",
    "contents" : "#to compute numbers of weights\ncompute_weigths_num <- function(input, layers) {\n  ret <- 0\n  mul <- input\n  for (i in 1:length(layers)) {\n    ret <- ret + mul*layers[i] + layers[i]\n    mul <- layers[i]\n  }\n  ret <- ret + layers[length(layers)] + 1\n  return(ret)\n}\ncmp_weigths_num <- cmpfun(compute_weigths_num)\n\n#build insert neur stats\nbuild_insert_stats.neur <- function(e, stats.neur, time) {\n  ret <- sprintf(\"INSERT INTO t_experiment (cas_behu, in_gho, in_teplota, in_vietor, in_oblacnost,\n                 in_vlhkost, in_tlak, in_azim, in_zen, in_elev, in_dlzkadna, den_hod, fve, \n                 tren_mnoz, tren_mnoz_velkost, tren_mnoz_select, tren_mnoz_opis, \n                 neural, neural_layers, neural_threshold, neural_algorithm, neural_startweights,\n                 N, MBE, RMBE, RMSE, RRMSE, MAE, RMAE, MPE, MAXAE, SD)\n                 VALUES ('%s', %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, '%s', '%s', \n                 '%s', %d, '%s', '%s', %s, '%s', %f, '%s', '%s',\n                 %d, '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s');\",\n                 time, e$gho, e$teplota, e$vietor, e$oblacnost, e$vlhkost, e$tlak,\n                 e$azim, e$zen, e$elev, e$dlzkadna, e$den_hod, e$fve[fve],\n                 e$tren_mnoz, e$tren_mnoz_velkost, gsub(\"'\", '\"', e$tren_mnoz_select), e$tren_mnoz_opis,\n                 e$neural, e$neural_layers, e$neural_threshold, e$neural_algorithm, \n                 as.character(e$neural_startweights),\n                 stats.neur$N, stats.neur$MBE, stats.neur$RMBE, stats.neur$RMSE, stats.neur$RRMSE,\n                 stats.neur$MAE, stats.neur$RMAE, stats.neur$MPE, stats.neur$MAXAE, stats.neur$SD)\n  return(ret)\n}\n\nbuild_insert_stats.forest <- function(e, stats.forest, time) {\n  ret <- sprintf(\"INSERT INTO t_experiment (cas_behu, in_gho, in_teplota, in_vietor, in_oblacnost,\n                 in_vlhkost, in_tlak, in_azim, in_zen, in_elev, in_dlzkadna, den_hod, fve, \n                 tren_mnoz, tren_mnoz_velkost, tren_mnoz_select, tren_mnoz_opis, \n                 forest, forest_ntree, forest_mtry,\n                 N, MBE, RMBE, RMSE, RRMSE, MAE, RMAE, MPE, MAXAE, SD)\n                 VALUES ('%s', %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, '%s', '%s', \n                 '%s', %d, '%s', '%s', %s, %d, %d,\n                 %d, '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s', '%s');\",\n                 time, e$gho, e$teplota, e$vietor, e$oblacnost, e$vlhkost, e$tlak,\n                 e$azim, e$zen, e$elev, e$dlzkadna, e$den_hod, e$fve[fve],\n                 e$tren_mnoz, e$tren_mnoz_velkost, gsub(\"'\", '\"', e$tren_mnoz_select), e$tren_mnoz_opis,\n                 e$forest, e$forest_mtry, e$forest_ntree, \n                 stats.forest$N, stats.forest$MBE, stats.forest$RMBE, stats.forest$RMSE, stats.forest$RRMSE,\n                 stats.forest$MAE, stats.forest$RMAE, stats.forest$MPE, stats.forest$MAXAE, stats.forest$SD)\n  return(ret)\n}\n\n# format casu\nformat.time <- function(x) UseMethod(\"format.time\")\nformat.time.difftime <- function(x) {\n  units(x) <- \"secs\"\n  x <- unclass(x)\n  NextMethod()\n}\nft.difftime <- cmpfun(format.time.difftime)\nformat.time.default <- function(x) {\n  y <- abs(x)\n  sprintf(\"%s%02dh:%02dm:%02ds\", \n          ifelse(x < 0, \"-\", \"\"), # sign\n          y %% 86400 %/% 3600,  # hours \n          y %% 3600 %/% 60,  # minutes\n          y %% 60 %/% 1) # seconds\n}\nft.default <- cmpfun(format.time.default)\nft <- cmpfun(format.time)\n\n# vrati connection na databazu\ngetConnection <- function(drv) {\n  con <- dbConnect(drv, dbname = \"test_db\", host = \"localhost\", \n                   port = 5432, user = \"postgres\", password = \"password\")\n  return(con)\n}\n\nlibrary(Metrics)\nlibrary(sirad)\n# all statistics \nall_statistics <- function(actual, predicted) {\n  mdval <- modeval(predicted, actual, stat=c(\"N\",\"MBE\",\"RMBE\",\"RMSE\",\"RRMSE\",\"MAE\",\"RMAE\",\"MPE\",\"SD\"),minlength=4)\n  mdval$MAXAE <- max(ae(actual, predicted))\n  return(mdval)\n}\nall_s <- cmpfun(all_statistics)\n\n\n# executes command stored in string\nunq <- function(com) {\n  return(eval(parse(text=com)))\n}\nunqq <- cmpfun(unq)\n\n# add item into vector\nvector.add <- function(vec, item) {\n  vec[length(vec)+1] <- item\n  return(vec)\n}\nvec.add <- cmpfun(vector.add)\nvector.add <- cmpfun(vector.add)\n",
    "created" : 1458906718236.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1981830074",
    "id" : "D6CA791C",
    "lastKnownWriteTime" : 1458911044,
    "last_content_update" : 1458911044173,
    "path" : "~/GitHub/baka/R source/benchmarks/functions.R",
    "project_path" : "functions.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}