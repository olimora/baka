{
    "collab_server" : "",
    "contents" : "library(\"RPostgreSQL\")\n\n{\n  e <- list()\n  e$gho <- TRUE\n  e$teplota <- TRUE\n  e$vietor <- TRUE\n  e$oblacnost <- F\n  e$vlhkost <- F\n  e$tlak <- F\n  e$azim <- F\n  e$zen <- F\n  e$elev <- F\n  e$dlzkadna <- F\n  e$den_hod <- c(\"den\", \"hod\")[1]\n  e$fve <- c(\"FVE Dubravy 1\", \"FVE Dubravy 2\", \"FVE Plesivec\")\n  e$tren_mnoz <- \"najpodobnejsich 20\"\n  e$tren_mnoz_velkost <- 60\n  e$tren_mnoz_select <- \"select datum, sum(gho) gho, sum(teplota) teplota,\n  sum(vietor) vietor, sum(praca) praca\n  from v_data\n  where fve_nazov = '%s'\n  group by datum\n  order by datum\"\n  e$tren_mnoz_opis <- \"vyber 20 najpodobnejsich dni podla scitaneho gho, teploty, vetra.\n  normalizovane na rozsah(skalu) medzi min a max za vsetky data elektrarne.\n  gho * 90, teplota * 10, vietor * 1.\"\n  e$neural <- TRUE\n  e$neural_layers <- \"c(3,2)\"\n  e$neural_threshold <- 0.01  #0.01 default\n  e$neural_algorithm <- c(\"backprop\", \"rprop+\", \"rprop-\", \"sag\", \"slr\")[2] # default je rprop+\n  e$neural_startweights <- \"rep(1, n$pocet_vah) # vektor jednotiek\"\n  e$forest <- TRUE\n  e$forest_ntree <- 0 # 0 ak default\n  e$forest_mtry <- 0 # 0 ak default\n  \n  n <- list()\n  n$input_v <- c(e$gho, e$teplota, e$vietor, e$oblacnost, e$vlhkost, \n                 e$tlak, e$azim, e$zen, e$elev, e$dlzkadna)\n  n$pocet_vah <- compute_weigths_num(length(subset(n$input_v, n$input_v == TRUE)),\n                                     unq(e$neural_layers))\n  n$net <- 0\n  n$output <- 0\n  n$stats <- 0\n  \n  f <- list()\n  f$forest <- 0\n  f$output <- 0\n  f$stats <- 0\n  \n  t <- list()\n  t$all_days <- 0\n  t$all_days_count <- 0\n  t$chosen_one\n  t$not_i <- 0\n  t$differ <- 0\n  t$train_set <- 0\n  t$ordered <- 0\n  t$actual <- 0\n  \n  prog <- list()\n  prog$printed <- -10\n  prog$print_perc <- 0\n  prog$print_perc_all <- 0\n  prog$baseAll <- 0\n  prog$basePart <- 0\n  prog$i <- 0\n  prog$actual_time <- 0\n  prog$estimated_time <- 0\n  prog$diff <- 1\n  \n  scale <- list()\n  scale$maxims <- 0\n  scale$minims <- 0\n  scale$scale <- 0\n  \n  time <- list()\n  time$start <- 0\n  time$end <- 0\n  \n  db <- list()\n  db$drv <- 0\n  db$con <- 0\n  db$result <- 0\n  \n}\n\ndb$drv <- dbDriver(\"PostgreSQL\")\nif (exists(\"db$con\")) dbDisconnect(db$con)\ndb$con <- getConnection(db$drv)\nprog$baseAll <- dbGetQuery(db$con, \"SELECT count(*) FROM\n                               (SELECT DISTINCT datum, fve FROM t_produkcia) s\")\ndbDisconnect(db$con)\n\nif (exists(\"db$con\")) dbDisconnect(db$con)\ndb$con <- getConnection(db$drv)\nt$all_days <- dbGetQuery(db$con, sprintf(e$tren_mnoz_select, e$fve[3]))\ndbDisconnect(db$con)\n\nscale$maxims <- c(max(t$all_days[,2]), max(t$all_days[,3]), max(t$all_days[,4]))\nscale$minims <- c(min(t$all_days[,2]), min(t$all_days[,3]), min(t$all_days[,4]))\nscale$scale <- abs(scale$maxims - scale$minims)\n\n# t$all_days_count <- nrow(t$all_days)\n# prog$basePart <- t$all_days_coun\n# prog$printed <- -10\n\nfor (i in 1:1) { #t$all_days_count\n  # pre kazdy den vybrat trenovaciu mnozinu\n  # vsetky okrem toho pre ktory idem predikovat\n  t$chosen_one <- t$all_days[i,]\n  t$not_i <- c(i != c(1:t$all_days_count))\n  t$train_set <- t$all_days[t$not_i,]\n  \n  # # vypocitat podobnost\n  # t$differ <- c()\n  # for (j in 1:nrow(t$train_set)) { #nrow(t$train_set)\n  #   t$differ[j] <- (\n  #     90 * (abs(t$chosen_one['gho'] - t$train_set[j,'gho']) %p% scale$scale[1]) \n  #     +\n  #       10 * (abs(t$chosen_one['teplota'] - t$train_set[j,'teplota']) %p% scale$scale[2])\n  #     +\n  #       (abs(t$chosen_one['vietor'] - t$train_set[j,'vietor']) %p% scale$scale[3])\n  #   )\n  # }\n  # t$train_set['diff'] <- unlist(t$differ)\n  # #t$train_set <- t$train_set[c(t$train_set[,6] < 3),]\n  # #print(nrow(t$train_set))\n  # \n  # t$ordered <- arrange(t$train_set, t$train_set[,6])\n  # t$train_set <- t$ordered[1:e$tren_mnoz_velkost,]\n  # t$actual <- vector.add(t$actual, t$chosen_one[1,'praca'])\n}",
    "created" : 1458906846155.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1269426147",
    "id" : "A15464D1",
    "lastKnownWriteTime" : 1458907165,
    "last_content_update" : 1458907165724,
    "path" : "~/GitHub/baka/R source/benchmarks/set_variables.R",
    "project_path" : "set_variables.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}