{
    "collab_server" : "",
    "contents" : "# 1. načítanie používaných balíkov a funkcii z externého súboru\nlibrary(RPostgreSQL)\nlibrary(plyr)\nlibrary(randomForest)\nlibrary(snow)\nsource('~/GitHub/baka/R source/new_way/funkcie.R')\n# 2. pripravenie paralelizácie na štyroch jadrách a exportovanie funkcie \n# format.time a balí-kov randomForest a plyr na všetky jadrá\ncl <- makeCluster(4, type='SOCK')\nclusterEvalQ(cl, format.time <- function(x) UseMethod(\"format.time\"))\nclusterEvalQ(cl, { library(plyr); library(randomForest) })\n# 3. inicializácia premenných používaných na nastavenie parametrov \n# predikčného modelu a výberu dát do trénovacej množiny\nwrite_results <- TRUE\ndataset <- c(\"v_data_all\", \"v_data_120\", \"v_data\", \"v_data_vz\", \"v_data_vz_120\")[5]\nfve <- c(1, 2, 3)\ntm_velkost <- c(30)\nf_ntree <- c(500)\nf_mtry <- c(2)\nf_nodesize <- c(3)\npod_gho <- c(1.4)\npod_obl <- c(1.1)\npod_tep <- c(3.6)\npod_vie <- c(1.4) \npod_vlh <- c(2.5)\npod_dlz <- c(4.1) \npod_ele <- c(2.8)\nele_res <- c(6)\nselect <- \" SELECT datum, cas, praca, gho, oblacnost, \nteplota, vietor, vlhkost, dlzkadna, elev\nFROM %s WHERE fve = %d ORDER BY cas\"\n# 4. vytvorenie karteziánskeho súčinu všetkých hodnôt nastavení\nsettings <- expand.grid(dataset = dataset, velkost = tm_velkost, \n                        ntree = f_ntree, mtry = f_mtry, nodesize = f_nodesize, \n                        pod_gho = pod_gho, pod_obl = pod_obl, pod_tep = pod_tep, \n                        pod_vie = pod_vie, pod_vlh = pod_vlh, pod_dlz = pod_dlz, \n                        pod_ele = pod_ele, ele_res = ele_res)\n# 5. výpis času začatia vykonávania skriptu\ntime.start <- Sys.time()\nprint(sprintf(\"Start: %s \", time.start), quote = F)\n# 6. vytvorenie spojenia s databázou\ndb.drv <- dbDriver(\"PostgreSQL\")\nif (exists(\"db.con\")) dbDisconnect(db.con)\ndb.con <- getConnection(db.drv)\n# 7. inicializácia a výpočet hodnôt premenných používaných na výpis \nprog.diff <- 0\nprog.printed_all <- -10000\nprog.printed_ops <- -10000\nprog.print_perc_all <- 0\nprog.baseAll <- 0\nprog.opsAll <- 0\nprog.i <- 0\nprog.op <- 0\nprog.opsAll <- nrow(settings)\nprog.baseAll <- 0 \nfor (i.dataset in dataset) {\n  b_select <- \"select count(*) as ccc from (select distinct * from \n  (select cas, fve from %s where fve IN (%s)) s1) s2\"\n  prog.baseAll <- prog.baseAll + dbGetQuery(db.con, \n                                            sprintf(b_select, i.dataset, toString(fve)))$ccc\n}\nprog.baseAll <- prog.baseAll * prog.opsAll / length(dataset)\nhours_done <- 0\nops_done <- 0\n# 8. cyklus pre každý riadok z tabuľky karteziánskeho súčinu nastavení,\nfor (i.sett in 1:prog.opsAll) {\n  setting <- settings[i.sett,]\n  ops_done <- i.sett\n  actual <- c()\n  output <- c()\n  # 9. cyklus pre každú z elektrární\n  for (i.fve in fve) {\n    # 10.\tvytiahnutie záznamov z databázy, \n    # výpočet škály pre hodnotenie podobnosti záznamov\n    all_hours <- dbGetQuery(db.con, sprintf(select, setting$dataset, i.fve))\n    ad_ncol <- ncol(all_hours)\n    maxims <- apply(all_hours[,4:ad_ncol], 2, max)\n    minims <- apply(all_hours[,4:ad_ncol], 2, min)\n    scale <- abs(maxims - minims)\n    all_hours <- data.matrix(all_hours)\n    chosen_hours <- all_hours\n    # 11. exportovanie premenných na všetky jadrá procesora, paralelný výpočet predikcie\n    # pre každý záznam zvlášť, vráti vektor predikovaných hodnôt pre jednu elektráreň\n    clusterExport(cl, list(\"chosen_hours\", \"all_hours\", \"scale\", \"setting\"))\n    fve_output <- parSapply(cl, 1:nrow(chosen_hours), function(y) {\n      # 12.\tvymedzenie potenciálnych záznamov do trénovacej množiny\n      hourh <- chosen_hours[y,]\n      potencial <- all_hours[all_hours[,'datum'] != hourh[['datum']],]\n      potencial <- potencial[abs(potencial[,'elev'] - hourh[['elev']]) <= setting$ele_res,]\n      # 13.\tohodnotenie potenciálnych záznamov podľa podobnosti\n      diff <- vector(mode = \"numeric\", length = nrow(potencial))\n      diff <- sapply(1:length(diff), function(x) {\n        ret <- abs(hourh[['gho']] - potencial[[x,'gho']]) * 100 / scale[['gho']] * setting$pod_gho\n        ret <- ret + abs(hourh[['oblacnost']] - potencial[[x,'oblacnost']]) * 100 / scale[['oblacnost']] * setting$pod_obl\n        ret <- ret + abs(hourh[['teplota']] - potencial[[x,'teplota']]) * 100 / scale[['teplota']] * setting$pod_tep\n        ret <- ret + abs(hourh[['vietor']] - potencial[[x,'vietor']]) * 100 / scale[['vietor']] * setting$pod_vie\n        ret <- ret + abs(hourh[['vlhkost']] - potencial[[x,'vlhkost']]) * 100 / scale[['vlhkost']] * setting$pod_vlh\n        ret <- ret + abs(hourh[['dlzkadna']] - potencial[[x,'dlzkadna']]) * 100 / scale[['dlzkadna']] * setting$pod_dlz\n        ret <- ret + abs(hourh[['elev']] - potencial[[x,'elev']]) * 100 / scale[['elev']] * setting$pod_ele\n        return(ret)\n      })\n      # 14.\tvýber najpodobnejších záznamov do trénovacej množiny  \n      train_set <- arrange(as.data.frame(potencial), diff)[1:setting$velkost,]\n      # 15. vytvorenie náhodného lesa regresných stromov\n      forest <- randomForest(praca~gho+oblacnost+teplota+vietor+vlhkost+dlzkadna+elev,\n                             data=train_set, ntree = setting$ntree, \n                             mtry = setting$mtry, nodesize = setting$nodesize)\n      # 16. predikcia produkcie pre vybraný záznam\n      predic <-predict(forest, data.frame(gho = hourh[['gho']], \n                                          oblacnost = hourh[['oblacnost']],\n                                          teplota = hourh[['teplota']], \n                                          vietor = hourh[['vietor']],\n                                          vlhkost = hourh[['vlhkost']], \n                                          dlzkadna = hourh[['dlzkadna']],\n                                          elev = hourh[['elev']]), \n                       type=\"response\", norm.votes=TRUE)\n      return(predic)\n    }) # koniec paralelizovaného kódu\n    # 17. pridanie skutočných a predikovaných hodnôt do vektorov spoločných \n    # pre všetky elektrárne\n    fve_actual <- chosen_hours[,'praca']\n    actual <- append(actual, fve_actual)\n    output <- append(output, fve_output)\n    # 18. výpis stavu predikcie\n    hours_done <- hours_done + nrow(all_hours)\n    prog.i <- hours_done\n    prog.print_perc_all <- (prog.i * 100 / prog.baseAll)\n    prog.op <- ops_done\n    prog.print_perc_ops <- (prog.op * 100 / prog.opsAll)\n    if (prog.print_perc_all > prog.printed_all + prog.diff) {\n      prog.actual_time <- as.numeric(difftime(Sys.time(), time.start, units = \"sec\"))\n      prog.estimated_time <- prog.actual_time * 100 / prog.print_perc_all\n      print(sprintf(\"Forest perc: %6.2f%s, ops: %7.d/%d, day: %9.d/%d, \n                    Estimated time: %s, Actual: %s\", #\n                    prog.print_perc_all, \"%\", prog.op, prog.opsAll, prog.i, \n                    prog.baseAll, format.time(prog.estimated_time),\n                    format.time(prog.actual_time)),\n            quote=F)\n      prog.printed_all <- prog.print_perc_all\n    }\n  } # koniec cyklu pre každú elektráreň\n  # 19.\tvýpočet štatistiky presnosti\n  stats <- all_statistics(actual, output)\n  if (write_results) {\n    for (name in names(stats)) {\n      if (is.infinite(stats[[name]]) | !is.numeric(stats[[name]]) | is.nan(stats[[name]])) \n        stats[[name]] <- 999.999\n    }\n    insert <- sprintf(\"INSERT INTO t_experiment (cas_behu, metoda, param1, param2, param3, param4, param5,\n                      N, MBE, RMBE, RMSE, RRMSE, MAE, RMAE, MPE, MAXAE, SD,\n                      tm_velkost, tm_opis, tm_select, fve, den_hod,\n                      pod_gho, pod_oblacnost, pod_teplota, pod_vietor, pod_vlhkost, pod_tlak, pod_dlzkadna, pod_azim, pod_elev,\n                      in_gho, in_oblacnost, in_teplota, in_vietor, in_vlhkost, in_tlak, in_dlzkadna, in_azim, in_elev)\n                      VALUES ('%s', '%s', '%s', '%s', '%s', '%s', '%s',\n                      %d, %f, %f, %f, %f, %f, %f, %f, %f, %f,\n                      %d, '%s', '%s', '%s', '%s',\n                      %f, %f, %f, %f, %f, %f, %f, %f, %f,\n                      %s, %s, %s, %s, %s, %s, %s, %s, %s);\",\n                      time.start, \"stats_hod\", setting$dataset, \"ntree \" %s% as.character(setting$ntree) , \"mtry \" %s% as.character(setting$mtry), \"nodesize \" %s% as.character(setting$nodesize), \" \",\n                      stats$N, stats$MBE, stats$RMBE, stats$RMSE, stats$RRMSE, stats$MAE, stats$RMAE, stats$MPE, stats$MAXAE, stats$SD,\n                      setting$velkost, \"30 najpodob hodin\", select, toString(fve), \"hod\",\n                      setting$pod_gho, setting$pod_obl, setting$pod_tep, setting$pod_vie, setting$pod_vlh, 0, setting$pod_dlz, 0, setting$pod_ele,\n                      TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, TRUE)\n    db.result <- dbGetQuery(db.con, insert)\n  }\n  # 20.\túprava výsledkov pre výpočet dennej štatistiky presnosti\n  s_select <- \"SELECT fve, datum, cas, gho, oblacnost,\n  teplota, vietor, vlhkost, dlzkadna, elev, praca\n  FROM %s WHERE fve IN (%s) ORDER BY fve, cas\"\n  all_data <-  dbGetQuery(db.con, sprintf(s_select, setting$dataset, toString(fve)))\n  all_data <- cbind(all_data, output)\n  to_see <- cbind(all_data, dif = abs(output - actual) * 100 / actual)\n  to_see <- arrange(to_see, to_see$dif)\n  groupped <- ddply(all_data,~datum+fve,summarise, gho=sum(gho), oblacnost=sum(oblacnost),\n                    teplota=sum(teplota), vietor=sum(vietor), vlhkost=sum(vlhkost),\n                    dlzkadna=max(dlzkadna), praca=sum(praca), output=sum(output))\n  # 21.\tvýpočet dennej štatistiky presnosti a zápis výsledkov do databázy\t\t\t\t\t\n  stats_day <- all_statistics(groupped$praca, groupped$output)\n  if (write_results) {\n    for (name in names(stats_day)) {\n      if (is.infinite(stats_day[[name]]) | !is.numeric(stats_day[[name]]) | is.nan(stats_day[[name]])) stats_day[[name]] <- 999.999\n    }\n    insert <- sprintf(\"INSERT INTO t_experiment (cas_behu, metoda, param1, param2, param3, param4, param5,\n                      N, MBE, RMBE, RMSE, RRMSE, MAE, RMAE, MPE, MAXAE, SD,\n                      tm_velkost, tm_opis, tm_select, fve, den_hod,\n                      pod_gho, pod_oblacnost, pod_teplota, pod_vietor, pod_vlhkost, pod_tlak, pod_dlzkadna, pod_azim, pod_elev,\n                      in_gho, in_oblacnost, in_teplota, in_vietor, in_vlhkost, in_tlak, in_dlzkadna, in_azim, in_elev)\n                      VALUES ('%s', '%s', '%s', '%s', '%s', '%s', '%s',\n                      %d, %f, %f, %f, %f, %f, %f, %f, %f, %f,\n                      %d, '%s', '%s', '%s', '%s',\n                      %f, %f, %f, %f, %f, %f, %f, %f, %f,\n                      %s, %s, %s, %s, %s, %s, %s, %s, %s);\",\n                      time.start, \"stats_den\", setting$dataset, \"ntree \" %s% as.character(setting$ntree) , \"mtry \" %s% as.character(setting$mtry), \"nodesize \" %s% as.character(setting$nodesize), \" \",\n                      stats_day$N, stats_day$MBE, stats_day$RMBE, stats_day$RMSE, stats_day$RRMSE, stats_day$MAE, stats_day$RMAE, stats_day$MPE, stats_day$MAXAE, stats_day$SD,\n                      setting$velkost, \"30 najpodob hodin\", select, toString(fve), \"hod\",\n                      setting$pod_gho, setting$pod_obl, setting$pod_tep, setting$pod_vie, setting$pod_vlh, 0, setting$pod_dlz, 0, setting$pod_ele,\n                      TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, TRUE, FALSE)\n    db.result <- dbGetQuery(db.con, insert)\n  }\n} # koniec cyklu pre každý riadok z tabuľky karteziánskeho súčinu nastavení\n# 22. konečný výpis,\ntime.end <- Sys.time()\nprint(sprintf(\"Start: %s, End: %s, Duration: %s\",\n              time.start, time.end, \n              format.time(difftime(time.end, time.start, units = \"sec\"))),\n      quote = F)\n# 23. ukončenie možnosti paralelizácie a zatvorenie spojenia s databázou.\nstopCluster(cl)\nif (exists(\"db.con\")) dbDisconnect(db.con)\n\n\n",
    "created" : 1466253098898.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4194584202",
    "id" : "81F73F4D",
    "lastKnownWriteTime" : 1466258636,
    "last_content_update" : 1466258636689,
    "path" : "~/GitHub/baka/R source/new_way/importance2.R",
    "project_path" : "importance2.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}