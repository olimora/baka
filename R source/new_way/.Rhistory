source('~/GitHub/baka/R source/new_way/prediction01.R')
source('~/GitHub/baka/R source/new_way/prediction01.R')
source('~/GitHub/baka/R source/new_way/prediction01.R')
source('~/GitHub/baka/R source/new_way/prediction01.R')
source('~/GitHub/baka/R source/new_way/prediction01.R')
source('~/GitHub/baka/R source/new_way/prediction01.R')
source('~/GitHub/baka/R source/new_way/prediction01.R')
source('~/GitHub/baka/R source/new_way/prediction01.R')
source('~/GitHub/baka/R source/new_way/prediction01.R')
source('~/GitHub/baka/R source/new_way/prediction01.R')
source('~/GitHub/baka/R source/new_way/prediction01.R')
source('~/GitHub/baka/R source/new_way/prediction01.R')
source('~/GitHub/baka/R source/new_way/prediction01.R')
source('~/GitHub/baka/R source/new_way/prediction01.R')
source('~/GitHub/baka/R source/new_way/prediction01.R')
source('~/GitHub/baka/R source/new_way/prediction01.R')
source('~/GitHub/baka/R source/new_way/prediction01.R')
source('~/GitHub/baka/R source/new_way/prediction01.R')
source('~/GitHub/baka/R source/new_way/proximity.R')
source('~/GitHub/baka/R source/new_way/proximity.R')
source('~/GitHub/baka/R source/new_way/proximity.R')
imp <- rbind(imp, importance(forest))
?rbind
source('~/GitHub/baka/R source/new_way/proximity.R')
source('~/GitHub/baka/R source/new_way/proximity.R')
source('~/GitHub/baka/R source/new_way/proximity.R')
source('~/GitHub/baka/R source/new_way/proximity.R')
source('~/GitHub/baka/R source/new_way/proximity.R')
source('~/GitHub/baka/R source/new_way/proximity.R')
source('~/GitHub/baka/R source/predikcia.R')
f$forest
importance(f$forest)
importance(f$forest, type = 1)
source('~/GitHub/baka/R source/new_way/proximity.R')
source('~/GitHub/baka/R source/new_way/proximity.R')
imp
source('~/GitHub/baka/R source/new_way/proximity.R')
imp
source('~/GitHub/baka/R source/new_way/prediction01.R')
(is.infinite(stats[[name]])
| !is.numeric(stats[[name]])
| is.nan(stats[[name]]))
source('~/GitHub/baka/R source/new_way/leto.R')
source('~/GitHub/baka/R source/new_way/leto.R')
stats
stat_DAY
stat_day
all_data <-  dbGetQuery(db.con, sprintf(s_select, setting$dataset, toString(fve)))
db.drv <- dbDriver("PostgreSQL")
if (exists("db.con")) dbDisconnect(db.con)
db.con <- getConnection(db.drv)
s_select <- "SELECT fve, datum, cas, gho, oblacnost,
teplota, vietor, vlhkost, dlzkadna, elev, praca
FROM %s WHERE fve IN (%s)
and to_date(to_char(datum, 'DD.MM.YYYY'), 'DD.MM.2000') > to_date('20.3.2000', 'DD.MM.2000')
and to_date(to_char(datum, 'DD.MM.YYYY'), 'DD.MM.2000') <= to_date('23.9.2000', 'DD.MM.2000')
ORDER BY fve, cas"
all_data <-  dbGetQuery(db.con, sprintf(s_select, setting$dataset, toString(fve)))
all_data
to_see <- cbind(all_data, dif = abs(output - actual) * 100 / actual)
to_see <- arrange(to_see, to_see$dif)
groupped <- ddply(all_data,~datum+fve,summarise, gho=sum(gho), oblacnost=sum(oblacnost),
teplota=sum(teplota), vietor=sum(vietor), vlhkost=sum(vlhkost),
dlzkadna=max(dlzkadna), praca=sum(praca), output=sum(output))
stats_day <- all_statistics(groupped$praca, groupped$output)
stats_day
if (write_results) {
for (name in names(stats)) {
if (is.infinite(stats[[name]])
| !is.numeric(stats[[name]])
| is.nan(stats[[name]])) stats[[name]] <- 999.999
}
insert <- sprintf("INSERT INTO t_experiment (cas_behu, metoda, param1, param2, param3, param4, param5,
N, MBE, RMBE, RMSE, RRMSE, MAE, RMAE, MPE, MAXAE, SD,
tm_velkost, tm_opis, tm_select, fve, den_hod,
pod_gho, pod_oblacnost, pod_teplota, pod_vietor, pod_vlhkost, pod_tlak, pod_dlzkadna, pod_azim, pod_elev,
in_gho, in_oblacnost, in_teplota, in_vietor, in_vlhkost, in_tlak, in_dlzkadna, in_azim, in_elev)
VALUES ('%s', '%s', '%s', '%s', '%s', '%s', '%s',
%d, %f, %f, %f, %f, %f, %f, %f, %f, %f,
%d, '%s', '%s', '%s', '%s',
%f, %f, %f, %f, %f, %f, %f, %f, %f,
%s, %s, %s, %s, %s, %s, %s, %s, %s);",
time.start, "stats_hod", setting$dataset, "ntree " %s% as.character(setting$ntree) , "mtry " %s% as.character(setting$mtry), "nodesize " %s% as.character(setting$nodesize), " ",
stats$N, stats$MBE, stats$RMBE, stats$RMSE, stats$RRMSE, stats$MAE, stats$RMAE, stats$MPE, stats$MAXAE, stats$SD,
setting$velkost, "30 najpodob hodin", select, toString(fve), "hod",
setting$pod_gho, setting$pod_obl, setting$pod_tep, setting$pod_vie, setting$pod_vlh, 0, setting$pod_dlz, 0, setting$pod_ele,
TRUE, TRUE, TRUE, TRUE, TRUE, FALSE, TRUE, FALSE, TRUE)
db.result <- dbGetQuery(db.con, insert)
}
source('~/GitHub/baka/R source/new_way/leto.R')
source('~/GitHub/baka/R source/new_way/leto.R')
source('~/GitHub/baka/R source/new_way/leto.R')
source('~/GitHub/baka/R source/new_way/leto.R')
source('~/GitHub/baka/R source/new_way/zima.R')
all_hours <- dbGetQuery(db.con, sprintf(select, setting$dataset, i.fve))
all_hours
source('~/GitHub/baka/R source/new_way/zima.R')
source('C:/Users/Oliver/Desktop/skript.r', encoding = 'UTF-8')
source('C:/Users/Oliver/Desktop/skript.r', encoding = 'UTF-8')
source('C:/Users/Oliver/Desktop/skript.r', encoding = 'UTF-8')
source('C:/Users/Oliver/Desktop/skript.r', encoding = 'UTF-8')
source('C:/Users/Oliver/Desktop/skript.r', encoding = 'UTF-8')
source('C:/Users/Oliver/Desktop/skript.r', encoding = 'UTF-8')
source('C:/Users/Oliver/Desktop/skript.r', encoding = 'UTF-8')
source('~/GitHub/baka/R source/new_way/skript.r', encoding = 'UTF-8')
source('~/GitHub/baka/R source/new_way/skript.r', encoding = 'UTF-8')
source('~/GitHub/baka/R source/new_way/skript.r')
getwd
getwd()
source('~/GitHub/baka/R source/new_way/skript.r')
source('~/GitHub/baka/R source/new_way/skript.r')
stats
stats_day
library("Metrics")
library("sirad")
source('~/GitHub/baka/R source/new_way/skript.r')
source('~/GitHub/baka/R source/new_way/skript.r')
stats_day
source('~/GitHub/baka/R source/new_way/importance.R', encoding = 'UTF-8')
import1
source('~/GitHub/baka/R source/new_way/importance.R', encoding = 'UTF-8')
View(import1)
View(import2)
View(import1)
import1
import2
View(import2)
source('~/GitHub/baka/R source/new_way/importance.R', encoding = 'UTF-8')
View(all_statistics)
View(import1)
View(import2)
import.gho
import$gho
import1$gho
import1.gho
import1[1]
res <- dbGetQuery(db.con, sprintf("INSERT INTO t_importance (pokus,
mse_gho, mse_obl, mse_tep, mse_vie, mse_vlh, mse_dlz, mse_ele,
pur_gho, pur_obl, pur_tep, pur_vie, pur_vlh, pur_dlz, pur_ele)
VALUES (%d,
%f, %f, %f, %f, %f, %f, %f,
%f, %f, %f, %f, %f, %f, %f);",
1,
import1[1], import1[2], import1[3], import1[4], import1[5], import1[6], import1[7],
import2[1], import2[2], import2[3], import2[4], import2[5], import2[6], import2[7]))
source('~/GitHub/baka/R source/new_way/importance.R', encoding = 'UTF-8')
warnings()
stats_day
source('~/GitHub/baka/R source/new_way/importance.R', encoding = 'UTF-8')
source('~/GitHub/baka/R source/new_way/importance.R', encoding = 'UTF-8')
source('~/GitHub/baka/R source/new_way/importance2.R', encoding = 'UTF-8')
source('~/GitHub/baka/R source/new_way/importance2.R', encoding = 'UTF-8')
source('~/GitHub/baka/R source/new_way/importance2.R', encoding = 'UTF-8')
source('~/GitHub/baka/R source/new_way/importance2.R', encoding = 'UTF-8')
source('~/GitHub/baka/R source/new_way/importance2.R', encoding = 'UTF-8')
source('~/GitHub/baka/R source/new_way/importance2.R', encoding = 'UTF-8')
